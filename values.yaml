# Default values for datagrid-config.

# -- Settings related to the Red Hat Data Grid Operator `Subscription`
# @default -- See child keys
operator:
  # -- (boolean) Create a `Subscription` for the Red Hat Data Grid Operator
  enabled: false
  # -- (boolean) Use a single operator instance to manage all Red Hat Data Grid 
  # instances
  singleInstance: true
  # -- The `channel` of the Operator
  channel: stable
  # -- The minimum `ClusterServiceVersion` for the operator
  startingCSV: 
  # -- Set the `Subscription` update approval mode. `Manual` will require
  # install plans to be approved before upgrades will take place (recommended 
  # for Production installations) while `Automatic` will be applied as and when
  # they become available
  updateApproval: Manual
  # -- The `Namespace` the Operator will be deployed in
  installNamespace: openshift-operators
  # -- When `operator.singleInstance` is marked as false, this instance of the 
  # Operator will manage these namespaces
  managedNamespaces: []

# -- Settings related to the Red Hat Data Grid Operator Cluster
# @default -- See child keys
infinispan:
  # -- (boolean) Create a `Subscription` for the Red Hat Data Grid Operator
  enabled: true
  # -- The Red Hat Data Grid version to install.  Not to be confused with the
  # Red Hat Data Grid Operator version.
  version: 8.5.3-1
  # -- The number of nodes that will form part of the Red Hat Data Grid cluster
  replicas: 1
  # -- The name of the Red Hat Data Grid cluster
  name: datagrid
  # -- Used to control the behavior of Red Hat Data Grid version upgrades. Not
  # to be confused with the Red Hat Data Grid Operator version.
  upgradeType: Shutdown
  # -- Disable the config listener pod. You should do this only if you do not 
  # need declarative Kubernetes representations of Data Grid resources created
  # through the Data Grid Console, CLI, or client applications.   
  disableConfigListener: false

# -- Settings related to the Red Hat Data Grid Operator Cluster
# @default -- See child keys
customConfig:
  # -- (boolean) Create a `ConfigMap` with a custom Red Hat Data Grid
  # configuration
  enabled: false
  # -- (object) The custom Red Hat Data Grid configuration
  config:

# -- Configuration of a secret used to store sensitive information
# @default -- See child keys
credentialsStore:
  # -- (boolean) Use a `Secret` to store sensitive information such as
  # credentials
  enabled: false
  # -- (string) The name of the `Secret` used to store sensitive information
  secretName:

# -- Used to expose Red Hat Data Grid for external connections
# @default -- See child keys
expose:
  # The type of service or route used to expose Red Hat Data Grid. Can be one
  # of `Route`, `NodePort` or `LoadBalancer`
  type: Route
  # -- (string) A specific hostname used to expose Red Hat Data Grid when 
  # `expose.type` is set to `Route`
  hostname:
  # -- The port number used to expose Red Hat Data Grid when `export.type`
  # is set to `NodePort` or `LoadBalancer`
  # @default -- Defaults to `11222` when `expose.type` is set to `LoadBalancer`
  port:

# -- Control monitoring configurations for Red Hat Data Grid
# @default -- See child keys
monitoring:
  # -- Enable JMX remote ports. This is not needed for prometheus endpoints.
  enableJMX: false
  # -- Disable the default prometheus service monitor
  disablePrometheus: false

# -- Control resource configurations for Red Hat Data Grid
# @default -- See child keys
resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 1Gi

# -- Control authentication configurations for Red Hat Data Grid
# @default -- See child keys
authentication:
  disable: false
  credentialsSecretName:

# -- Control encryption configurations for Red Hat Data Grid
# @default -- See child keys
encryption:
  disable: false
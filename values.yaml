# Default values for datagrid-config.

# -- Settings related to the Red Hat Data Grid Operator `Subscription`
# @default -- See child keys
operator:
  # -- (boolean) Create a `Subscription` for the Red Hat Data Grid Operator
  enabled: false
  # -- (boolean) Use a single operator instance to manage all Red Hat Data Grid 
  # instances
  singleInstance: true
  # -- The `channel` of the Operator
  channel: stable
  # -- The minimum `ClusterServiceVersion` for the operator
  startingCSV: 
  # -- Set the `Subscription` update approval mode. `Manual` will require
  # install plans to be approved before upgrades will take place (recommended 
  # for Production installations) while `Automatic` will be applied as and when
  # they become available
  updateApproval: Manual
  # -- The `Namespace` the Operator will be deployed in
  installNamespace: openshift-operators
  # -- When `operator.singleInstance` is marked as false, this instance of the 
  # Operator will manage these namespaces
  managedNamespaces: []

# -- Settings related to the Red Hat Data Grid Operator Cluster
# @default -- See child keys
infinispan:
  # -- (boolean) Create a `Subscription` for the Red Hat Data Grid Operator
  enabled: true
  # -- The Red Hat Data Grid version to install.  Not to be confused with the
  # Red Hat Data Grid Operator version.
  version: 8.5.3-1
  # -- The number of nodes that will form part of the Red Hat Data Grid cluster
  replicas: 1
  # -- The name of the Red Hat Data Grid cluster
  name: datagrid
  # -- Used to control the behavior of Red Hat Data Grid version upgrades.
  upgradeType: Shutdown
  # -- Disable the config listener pod. You should do this only if you do not 
  # need declarative Kubernetes representations of Data Grid resources created
  # through the Data Grid Console, CLI, or client applications.   
  disableConfigListener: false

# -- Settings related to the Red Hat Data Grid Operator Cluster
# @default -- See child keys
customConfig:
  # -- (boolean) Create a `ConfigMap` with a custom Red Hat Data Grid
  # configuration
  enabled: false
  # -- (object) The custom Red Hat Data Grid configuration
  config:

# -- Configuration of a `Secret` used to store sensitive information
# @default -- See child keys
credentialsStore:
  # -- (boolean) Use a `Secret` to store sensitive information such as
  # credentials
  enabled: false
  # -- (string) The name of the `Secret` used to store sensitive information
  secretName:

# -- Used to expose Red Hat Data Grid for external connections
# @default -- See child keys
expose:
  # The type of service or route used to expose Red Hat Data Grid. Can be one
  # of `Route`, `NodePort` or `LoadBalancer`
  type: Route
  # -- (string) A specific hostname used to expose Red Hat Data Grid when 
  # `expose.type` is set to `Route`
  hostname:
  # -- The port number used to expose Red Hat Data Grid when `export.type`
  # is set to `NodePort` or `LoadBalancer`
  # @default -- Defaults to `11222` when `expose.type` is set to `LoadBalancer`
  port:

# -- Control monitoring configurations for Red Hat Data Grid
# @default -- See child keys
monitoring:
  # -- Enable JMX remote ports. This is not needed for prometheus endpoints.
  enableJMX: false
  # -- Disable the default prometheus service monitor
  disablePrometheus: false

# -- Control resource configurations for Red Hat Data Grid
# @default -- See child keys
resources:
  # -- A limit sets the maximum amount of a resource (CPU or memory) that a
  # container is allowed to consume.
  # @default -- See child keys
  limits:
    # -- The maximum amount of CPU the application is allowed to use.
    cpu: 2000m
    # -- The maximum amount of memory the application is allowed to use.
    memory: 2Gi
  # -- A request specifies the minimum amount of a resource (CPU or memory) that
  # Kubernetes guarantees for a container.
  # @default -- See child keys
  requests:
    # -- The amount of CPU guaranteed for the application to use.
    cpu: 1000m
    # -- The amount of memory guaranteed for the application to use.
    memory: 1Gi

# -- Control authentication configurations for Red Hat Data Grid
# @default -- See child keys
authentication:
  # -- (bool) Disable authentication. Not recommended for production.
  disable: false
  # -- (string) Name of the `Secret` containing an identities declaration used to
  # configure a properties realm
  credentialsSecretName:
  propertiesRealm:
    enabled: true
  ldapRealm:
    enabled: false
    isActiveDirectory: false
    url:
    principal:
    credentialAlias:
    connectionTimeout:
    readTimeout:
    connectionPooling: true
    referralMode:
    pageSize:
    directVerification: true
    nameRewriter:
      commonNamePrincipalTransformer:
        enabled: false
      casePrincipalTransformer:
        enabled: false
        uppercase: true
      regexPrincipalTransformer:
        enabled: false
        pattern:
        replacement:
    identityMapping:
      rdnIdentifier:
      searchDn:
      searchRecursive: false
      userPasswordMapper:
        from:
        verifiable: false
      attributeMapping:
        - filter:
          filterDn:
          from:
          to:

# -- Control encryption configurations for Red Hat Data Grid
# @default -- See child keys
encryption:
  # -- (bool) Disable encryption. Not recommended for production.
  disable: false

# -- Control probe override configurations for Red Hat Data Grid.
# If no overrides are specified sensible operator defaults will be used.
# @default -- See child keys
probes:
  # -- Readiness probe overrides. Determines if a container is ready to accept
  # traffic. If a readiness probe fails, Kubernetes removes the pod from all
  # matching service endpoints, preventing traffic from being routed to it until
  # it becomes ready again.
  # @default -- See child keys
  readinessProbe:
    # -- (int) Minimum consecutive failures for the probe to be considered
    # failed after having succeeded. 
    failureThreshold: 5
    # -- (int) Number of seconds after the container has started before liveness
    # probes are initiated.
    initialDelaySeconds:
    # -- (int) How often (in seconds) to perform the probe.
    periodSeconds: 10
    # -- (int) Minimum consecutive successes for the probe to be considered
    # successful after having failed.
    successThreshold: 1
    # -- (int) Number of seconds after which the probe times out.
    timeoutSeconds: 1
  # -- Liveness probe overrides. Determines if a container is running and
  # healthy. If a liveness probe fails, Kubernetes restarts the container to
  # attempt recovery.
  # @default -- See child keys
  livenessProbe:
    # -- (int) Minimum consecutive failures for the probe to be considered
    # failed after having succeeded. 
    failureThreshold: 5
    # -- (int) Number of seconds after the container has started before liveness
    # probes are initiated.
    initialDelaySeconds:
    # -- (int) How often (in seconds) to perform the probe.
    periodSeconds: 10
    # -- (int) Minimum consecutive successes for the probe to be considered
    # successful after having failed.
    successThreshold: 1
    # -- (int) Number of seconds after which the probe times out.
    timeoutSeconds: 1
  # -- Startup probe overrides. Verifies whether the application within a
  # container has successfully started. This is particularly useful for 
  # slow-starting applications, preventing them from being prematurely killed by
  # liveness probes before they've had a chance to fully initialize.
  # @default -- See child keys
  startupProbe:
    # -- (int) Minimum consecutive failures for the probe to be considered
    # failed after having succeeded. 
    failureThreshold: 600
    # -- (int) Number of seconds after the container has started before liveness
    # probes are initiated.
    initialDelaySeconds: 3
    # -- (int) How often (in seconds) to perform the probe.
    periodSeconds: 1
    # -- (int) Minimum consecutive successes for the probe to be considered
    # successful after having failed.
    successThreshold: 1
    # -- (int) Number of seconds after which the probe times out.
    timeoutSeconds: 1

# -- Control log level for categories for Red Hat Data Grid.
# @default -- See child keys
logging:
  org.infinispan: info
  org.jgroups: info
  org.wildfly: info

# -- Control authorization for Red Hat Data Grid.
# @default -- See child keys
authorization:
  # -- Enable authorization to provide more granular security control over the
  # Red Hat Data Grid cluster.
  enabled: false
  # -- Custom RBAC roles permission configuration.
  # @default -- See child keys
  customRoles:
    # -- Enable custom role configuration.
    enabled: false
    # -- List of custom role configurations.
    # @default -- See example role entry
    roles:
      -  
        # -- Name of the custom role
        name: custom-admin
        # -- A list of permissions with possible values being `ALL` `ALL_READ`,
        # `ALL_WRITE`, `LISTEN`, `EXEC`, `MONITOR`, `CREATE`
        permissions:
          - ALL

# -- Control high availability for Red Hat Data Grid.
# @default -- See child keys
availability:
  # -- Enable high availability using anti-affinity.
  enabled: true
  # -- One of `preferred`, for `preferredDuringSchedulingIgnoredDuringExecution`,
  # or `required`, for `requiredDuringSchedulingIgnoredDuringExecution`, modes.
  antiAffinitityType: preferred
  # -- Use `kubernetes.io/hostname` `topologyKey`
  hostname: true
  # -- Use `topology.kubernetes.io/zone` `topologyKey`
  zone: false

# -- Control autoscaling for Red Hat Data Grid. This should be disabled during
# upgrade procedures as it will interfere with the upgrade process.
# @default -- See child keys
autoscaling:
  # -- (bool) Enable autoscaling.
  enabled: false
  # -- Minimum amount of pods.
  minReplicas: 1
  # -- Maximum amount of pods.
  maxReplicas: 3
  # -- (int) CPU percentage utilization that triggers a scaling operation.
  cpuAverageUtilization:
  # -- (int) Memory percentage utilization that triggers a scaling operation.
  memoryAverageUtilization:

# -- Control storage resources for Red Hat Data Grid. This will provide storage
# for preserving cluster state during shutdown and for passivated cache entries.
# @default -- See child keys
storage:
  # -- (string) Specifies the amount of storage for Data Grid service pods.
  size: 1Gi
  # -- (bool) Defines whether storage is ephemeral or permanent.
  ephemeral: false
  # -- (string) Specifies the name of a StorageClass object to use for the
  # persistent volume claim (PVC). If left blank the persistent volume claim
  # uses the default storage class.
  storageClassName:

# -- Cache configuration for caches
# @default -- See child keys
caches: